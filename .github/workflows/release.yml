name: Create Release

on:
  push:
    tags:
      - "v*" # ÂΩìÊé®ÈÄÅ‰ª• v ÂºÄÂ§¥ÁöÑÊ†áÁ≠æÊó∂Ëß¶Âèë

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ëé∑ÂèñÂÆåÊï¥ÁöÑ git ÂéÜÂè≤

      - name: Setup Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Generate changelog
        id: changelog
        run: |
          # Ëé∑ÂèñÂΩìÂâçÊ†áÁ≠æ
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT

          # Ëé∑Âèñ‰∏ä‰∏Ä‰∏™Ê†áÁ≠æ
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

          # ÁîüÊàê changelog
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "## üéâ Êñ∞ÂäüËÉΩ" > release_notes.md
            echo "" >> release_notes.md
            echo "### üìã Êõ¥Êñ∞ÂÜÖÂÆπ" >> release_notes.md
            echo "" >> release_notes.md
            
            # Ëé∑ÂèñÊèê‰∫§‰ø°ÊÅØÂπ∂Ê†ºÂºèÂåñ
            git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD | \
            sed 's/^feat: /‚ú® /' | \
            sed 's/^fix: /üêõ /' | \
            sed 's/^chore: /üîß /' | \
            sed 's/^refactor: /‚ôªÔ∏è /' | \
            sed 's/^docs: /üìö /' | \
            sed 's/^style: /üíÑ /' | \
            sed 's/^test: /üß™ /' | \
            sed 's/^perf: /‚ö° /' | \
            sed 's/^ci: /üë∑ /' | \
            sed 's/^build: /üì¶ /' | \
            sed 's/^revert: /‚è™ /' >> release_notes.md
            
            echo "" >> release_notes.md
            echo "### üîó Áõ∏ÂÖ≥ÈìæÊé•" >> release_notes.md
            echo "- [GitHub Repository](https://github.com/jenkinpan/pkg-checker-rs)" >> release_notes.md
            echo "- [Crates.io](https://crates.io/crates/pkg-checker)" >> release_notes.md
            echo "- [Documentation](https://docs.rs/pkg-checker)" >> release_notes.md
            echo "" >> release_notes.md
            echo "## üì¶ ÂÆâË£Ö" >> release_notes.md
            echo "" >> release_notes.md
            echo "\`\`\`bash" >> release_notes.md
            echo "cargo install pkg-checker" >> release_notes.md
            echo "\`\`\`" >> release_notes.md
          else
            echo "## üéâ È¶ñÊ¨°ÂèëÂ∏É" > release_notes.md
            echo "" >> release_notes.md
            echo "pkg-checker ÊòØ‰∏Ä‰∏™Áî® Rust ÁºñÂÜôÁöÑÂ∑•ÂÖ∑ÔºåÁî®‰∫éÊ£ÄÊü•ÂíåÁÆ°ÁêÜÂÖ®Â±ÄÂÆâË£ÖÁöÑ Cargo ÂåÖÊõ¥Êñ∞„ÄÇ" >> release_notes.md
            echo "" >> release_notes.md
            echo "### ‚ú® ‰∏ªË¶ÅÂäüËÉΩ" >> release_notes.md
            echo "- üîç Ëá™Âä®Ê£ÄÊµãÂ∑≤ÂÆâË£ÖÁöÑÂÖ®Â±Ä Cargo ÂåÖ" >> release_notes.md
            echo "- üì¶ Ê£ÄÊü•ÊØè‰∏™ÂåÖÁöÑÊúÄÊñ∞ÁâàÊú¨" >> release_notes.md
            echo "- üé® ÂΩ©Ëâ≤ËæìÂá∫ÔºåÊ∏ÖÊô∞ÊòæÁ§∫Êõ¥Êñ∞Áä∂ÊÄÅ" >> release_notes.md
            echo "- ‚ö° ÂºÇÊ≠•Â§ÑÁêÜÔºåÂø´ÈÄüÊ£ÄÊü•Â§ö‰∏™ÂåÖ" >> release_notes.md
            echo "- üîÑ ÈªòËÆ§‰∫§‰∫íÂºèÊõ¥Êñ∞Ê®°ÂºèÔºå‰∏ÄÈîÆÊõ¥Êñ∞ÂåÖ" >> release_notes.md
            echo "- üß† Êô∫ËÉΩÈ¢ÑÂèëÂ∏ÉÁâàÊú¨Ê£ÄÊµãÂíåËØ¢ÈóÆ" >> release_notes.md
            echo "- üìã ËØ¶ÁªÜÁöÑÊõ¥Êñ∞ÊëòË¶ÅÂäüËÉΩ" >> release_notes.md
            echo "" >> release_notes.md
            echo "## üì¶ ÂÆâË£Ö" >> release_notes.md
            echo "" >> release_notes.md
            echo "\`\`\`bash" >> release_notes.md
            echo "cargo install pkg-checker" >> release_notes.md
            echo "\`\`\`" >> release_notes.md
            echo "" >> release_notes.md
            echo "## üîó Áõ∏ÂÖ≥ÈìæÊé•" >> release_notes.md
            echo "- [GitHub Repository](https://github.com/jenkinpan/pkg-checker-rs)" >> release_notes.md
            echo "- [Crates.io](https://crates.io/crates/pkg-checker)" >> release_notes.md
            echo "- [Documentation](https://docs.rs/pkg-checker)" >> release_notes.md
          fi

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --workspace

      - name: Check formatting
        run: cargo fmt --all --check

      - name: Run clippy
        run: cargo clippy --workspace -- -D warnings

      - name: Publish to Crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.changelog.outputs.current_tag }}
          name: pkg-checker ${{ steps.changelog.outputs.current_tag }} - Ëá™Âä®ÂèëÂ∏É
          body_path: release_notes.md
          draft: false
          prerelease: false
          generate_release_notes: false

      - name: Upload release notes
        run: |
          echo "Release created successfully!"
          echo "Tag: ${{ steps.changelog.outputs.current_tag }}"
          echo "Previous tag: ${{ steps.changelog.outputs.previous_tag }}"
          echo ""
          echo "Release notes content:"
          cat release_notes.md
